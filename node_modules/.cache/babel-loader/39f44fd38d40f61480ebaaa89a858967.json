{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_Articles = _resolveComponent(\"Articles\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Search), _createVNode(_component_Articles, {\n    onDelete: _cache[0] || (_cache[0] = () => {}),\n    articles: $data.articles\n  }, null, 8 /* PROPS */, [\"articles\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACEA,aAAUC,oBACVD,aAA0CE;IAA/BC,QAAM,4BAAP,QAAO;IAAGC,QAAQ,EAAEC","names":["_createVNode","_component_Search","_component_Articles","onDelete","articles","$data"],"sourceRoot":"","sources":["/Users/Nicole/CODE/fomatic/nicole-onboarding-2/news-project/src/views/HomePage.vue"],"sourcesContent":["<template>\n  <Search />\n  <Articles @delete  :articles=\"articles\" />\n</template>\n\n<script>\nimport Search from \"../components/Search.vue\";\nimport Articles from \"../components/Articles.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"HomePage\",\n  components: {\n    Search,\n    Articles,\n  },\n  data() {\n    return { articles: [] };\n  },\n\n  methods: {\n    async deleteTask(id) {\n      if (confirm(\"Are you sure?\")) {\n        const res = await fetch(`api/articles/${id}`, {\n          method: \"DELETE\",\n        });\n\n        res.status === 200\n          ? (this.articles = this.articles.filter((article) => article.id !== id))\n          : alert(\"Error Deleting Article\");\n      }\n    },\n    async fetchArticles() {\n      const res = await fetch(\"api/articles\");\n      const data = await res.json();\n      return data;\n    },\n    async fetchArticle(id) {\n      const res = await fetch(`api/articless/${id}`);\n      const data = await res.json();\n      return data;\n    },\n  },\n  async created() {\n    this.articles = await this.fetchArticles();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}